steps:
  # Get GitHub App credentials
  - name: 'ubuntu'
    dir: 'backstage'
    entrypoint: bash
    args:
      - '-c'
      - |
        touch github-app-integration-credentials.yaml

  # Install yarn
  - name: 'gcr.io/cloud-builders/npm:$_NPM_IMAGE_TAG'
    dir: 'backstage'
    entrypoint: 'yarn'
    args: ['install']

  # Transpile Backstage
  - name: 'gcr.io/cloud-builders/npm:$_NPM_IMAGE_TAG'
    dir: 'backstage'
    entrypoint: 'yarn'
    args: ['tsc']

  # Build Backstage
  - name: 'gcr.io/cloud-builders/npm:$_NPM_IMAGE_TAG'
    dir: 'backstage'
    entrypoint: 'yarn'
    args: ['build:backend']

  # Build Image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backstage'
    args: ['image','build','.','-f','packages/backend/Dockerfile','--tag','$_ARTIFACT_REGISTRY_LOCATION.pkg.dev/$PROJECT_ID/ph-backstage/backstage:latest','--tag','$_ARTIFACT_REGISTRY_LOCATION.pkg.dev/$PROJECT_ID/ph-backstage/backstage:$SHORT_SHA']
    env:
      - 'DOCKER_BUILDKIT=1'

  # Publish Image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backstage'
    args: ['push', '--all-tags','$_ARTIFACT_REGISTRY_LOCATION.pkg.dev/$PROJECT_ID/ph-backstage/backstage']

  # Deploy Image to GKE
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
    - run
    - --image=$_ARTIFACT_REGISTRY_LOCATION.pkg.dev/$PROJECT_ID/ph-backstage/backstage:$SHORT_SHA
    - --cluster=$_CLUSTER_NAME
    - --location=$_CLUSTER_LOCATION
    - --filename=root-sync/base/backstage/backstage.yaml

substitutions:
  _NPM_IMAGE_TAG: node-18.12.0
  _ARTIFACT_REGISTRY_LOCATION: northamerica-northeast1-docker
  _CLUSTER_NAME: phac-backstage
  _CLUSTER_LOCATION: northamerica-northeast1

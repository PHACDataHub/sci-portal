---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: project
  annotations:
    crossplane.io/composition-schema-aware-validation-mode: strict
  labels:
    provider: kubernetes
    guide: self
spec:
  compositeTypeRef:
    apiVersion: data-science-portal.phac-aspc.gc.ca/v1alpha1
    kind: xProject
  resources:
    - name: FOLDER
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
              kind: Folder
              metadata:
                name: "TO BE PATCHED"
                namespace: default
              spec:
                displayName: "TO BE PATCHED"
                folderRef:
                  external: "TO BE PATCHED"
      patches:
        - fromFieldPath: "spec.folderName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        - fromFieldPath: "spec.folderName"
          toFieldPath: "spec.forProvider.manifest.spec.displayName"
        - fromFieldPath: "spec.rootFolderId"
          toFieldPath: "spec.forProvider.manifest.spec.folderRef.external"

      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.manifest

    - name: PROJECT
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
              kind: Project
              metadata:
                name: "TO BE PATCHED"
                namespace: default
                annotations:
                  cnrm.cloud.google.com/auto-create-network: "false"
              spec:
                name: "TO BE PATCHED"
                # resourceID: "TO BE PATCHED" -- xulid is too long
                folderRef:
                  external: "TO BE PATCHED"
                billingAccountRef:
                  external: "TO BE PATCHED"
          references:
            - dependsOn:
                apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                kind: Folder
                name: "TO BE PATCHED"
                namespace: default
            - patchesFrom:
                apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                kind: Folder
                name: "TO BE PATCHED"
                namespace: default
                fieldPath: "status.folderId"
              toFieldPath: "spec.folderRef.external"
            - patchesFrom:
                apiVersion: v1
                kind: ConfigMap
                namespace: backstage
                name: backstage-config
                fieldPath: data.GCP_BILLING_ACCOUNT_ID
              toFieldPath: spec.billingAccountRef.external
      patches:
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.spec.name"
        # - fromFieldPath: "spec.projectId" -- xulid is too long
        #   toFieldPath: "spec.forProvider.manifest.spec.resourceID"
        - fromFieldPath: "spec.folderName"
          toFieldPath: "spec.references[0].dependsOn.name"
        - fromFieldPath: "spec.folderName"
          toFieldPath: "spec.references[1].patchesFrom.name"
      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.manifest

    - name: BUDGET
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              apiVersion: billingbudgets.cnrm.cloud.google.com/v1beta1
              kind: BillingBudgetsBudget
              metadata:
                name: "TO BE PATCHED"
                namespace: default
              spec:
                billingAccountRef:
                  external: "TO BE PATCHED"
                displayName: "TO BE PATCHED"
                budgetFilter:
                  projects:
                    - name: "TO BE PATCHED"
                  calendarPeriod: "YEAR"
                amount:
                  specifiedAmount:
                    currencyCode: "CAD"
                    units: 3000  # Placeholder
                thresholdRules:
                  - thresholdPercent: 0.25
                    spendBasis: "CURRENT_SPEND"
                  - thresholdPercent: 0.50
                    spendBasis: "CURRENT_SPEND"
                  - thresholdPercent: 0.75
                    spendBasis: "CURRENT_SPEND"
                  - thresholdPercent: 0.90
                    spendBasis: "CURRENT_SPEND"
                  - thresholdPercent: 0.95
                    spendBasis: "CURRENT_SPEND"
                  - thresholdPercent: 1.00
                    spendBasis: "CURRENT_SPEND"
          references:
            - dependsOn:
                apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                kind: Project
                name: "TO BE PATCHED"
                namespace: default
            - patchesFrom:
                apiVersion: v1
                kind: ConfigMap
                namespace: backstage
                name: backstage-config
                fieldPath: data.GCP_BILLING_ACCOUNT_ID
              toFieldPath: spec.billingAccountRef.external
      patches:
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.references[0].dependsOn.name"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                type: Format
                fmt: "budget-%s"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.spec.displayName"
          transforms:
            - type: string
              string:
                type: Format
                fmt: "budget-%s"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.spec.budgetFilter.projects[0].name"
      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.manifest

    - name: BILLING-IAM
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMPolicy
              metadata:
                name: "TO BE PATCHED"
                namespace: default
              spec:
                resourceRef:
                  kind: Project
                  name: "TO BE PATCHED"
                bindings:
                  - role: roles/owner
                    members:
                      - "TO BE PATCHED"
                  - role: roles/editor
                    members:
                      - "TO BE PATCHED"
                auditConfigs:
                  - service: allServices
                    auditLogConfigs:
                      - logType: DATA_WRITE
                      - logType: DATA_READ
          references:
            - dependsOn:
                apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                kind: Project
                name: "TO BE PATCHED"
                namespace: default
      patches:
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.references[0].dependsOn.name"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.spec.resourceRef.name"
        - fromFieldPath: "spec.projectOwners"
          toFieldPath: "spec.forProvider.manifest.spec.bindings[0].members"
        - fromFieldPath: "spec.projectEditors"
          toFieldPath: "spec.forProvider.manifest.spec.bindings[1].members"
        - fromFieldPath: "spec.projectName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                type: Format
                fmt: "iampolicy-%s"

      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.manifest
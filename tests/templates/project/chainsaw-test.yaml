---
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: project-claim
spec:
  # cluster: gke_pht-01hsv4d2m0n_northamerica-northeast1_phac-backstage

  template: true
  bindings:
    - name: folderId
      value: "108494461414"
    - name: projectNamePrefix
      value: phx-chainsaw-

    # Generated values
    - name: requestId
      value: <uuid>
    - name: projectId
      value: phx-<ulid-timestamp>
    - name: projectName
      value: phx-chainsaw-###

  steps:
    - try:
        - delete:
            ref:
              apiVersion: apiextensions.crossplane.io/v1
              kind: CompositeResourceDefinition
              name: xprojects.data-science-portal.phac-aspc.gc.ca
        - apply:
            file: ../../../root-sync/base/crossplane/project/xrd-project.yaml
        - description: Assert the CompositeResourceDefinition has been created
          assert:
            resource:
              apiVersion: apiextensions.crossplane.io/v1
              kind: CompositeResourceDefinition
              metadata:
                name: xprojects.data-science-portal.phac-aspc.gc.ca
              status:
                (conditions[?type == 'Established']):
                  - status: "True"
                (conditions[?type == 'Offered']):
                  - status: "True"

        - delete:
            ref:
              apiVersion: apiextensions.crossplane.io/v1
              kind: Composition
              name: project
        - apply:
            file: ../../../root-sync/base/crossplane/project/composition-project.yaml

    - try:
        - description: Generate the request ID
          script:
            content: uuidgen | tr '[:upper:]' '[:lower:]'
            outputs:
              - name: requestId
                value: ($stdout)

        - description: Generate the project ID
          script:
            content: curl --silent https://ulid.truestamp.com/ | jq -r '.[0].ulid' | tr '[:upper:]' '[:lower:]' | cut -c 1-11
            outputs:
              - name: projectId
                value: (concat('phx-', $stdout))

        - description: Generate the next project name
          script:
            content: gcloud projects list --filter 'name:phx-chainsaw-* AND lifecycleState:*' --sort-by=~createTime --limit 1 --format='value(NAME)'
            outputs:
              - name: projectName
                value: (concat($projectNamePrefix, pad_left(to_string(add(to_number(trim_left($stdout, $projectNamePrefix)), `1`)), `3`, '0')))

        - description: Apply a ProjectClaim
          apply:
            resource:
              apiVersion: data-science-portal.phac-aspc.gc.ca/v1alpha1
              kind: ProjectClaim
              metadata:
                namespace: default
                name: (join('-', [$projectName, $requestId]))
              spec:
                rootFolderId: ($folderId)
                projectName: ($projectName)
                projectId: ($projectId)
                projectEditors:
                  - user:sean.poulter@focisolutions.com
                projectViewers:
                  - user:sean.poulter@focisolutions.com
                  - user:sean.poulter@gcp.hc-sc.gc.ca
                labels:
                  cost-centre: abc123456789

        - description: Assert the ProjectClaim has been created
          assert:
            resource:
              apiVersion: data-science-portal.phac-aspc.gc.ca/v1alpha1
              kind: ProjectClaim
              metadata:
                namespace: default
                name: (join('-', [$projectName, $requestId]))
              status:
                (conditions[?type == 'Synced']):
                  - status: "True"
                (conditions[?type == 'Ready']):
                  - status: "True"

        - description: Assert the Project has been created with Config Connector
          assert:
            timeout: 2m
            resource:
              apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
              kind: Project
              metadata:
                namespace: default
                name: ($projectName)
                annotations:
                  cnrm.cloud.google.com/auto-create-network: "false"
                labels:
                  cost-centre: abc123456789
              spec:
                name: ($projectName)
                resourceID: ($projectId)
                folderRef:
                  external: ($folderId)
              status:
                (conditions[?type == 'Ready' && reason == 'UpToDate']):
                  - status: "True"

        - description: Assert the IAMPolicy has been created with Config Connector
          assert:
            resource:
              apiVersion: iam.cnrm.cloud.google.com/v1beta1
              kind: IAMPolicy
              metadata:
                namespace: default
                name: (join('-', ['iampolicy', $projectName]))
              spec:
                resourceRef:
                  kind: Project
                  name: ($projectName)
                bindings:
                  - role: roles/editor
                    members:
                      - user:sean.poulter@focisolutions.com
                  - role: roles/viewer
                    members:
                      - user:sean.poulter@focisolutions.com
                      - user:sean.poulter@gcp.hc-sc.gc.ca
              status:
                (conditions[?type == 'Ready' && reason == 'UpToDate']):
                  - status: "True"

        - description: Assert the Budget has been created with Config Connector
          assert:
            resource:
              apiVersion: billingbudgets.cnrm.cloud.google.com/v1beta1
              kind: BillingBudgetsBudget
              metadata:
                namespace: default
                name: (join('-', ['budget', $projectName]))
              spec:
                displayName: (join('-', ['budget', $projectName]))
                budgetFilter:
                  projects:
                    - name: ($projectName)

        - description: Assert the Dataplex API has been enabled with Config Connector
          assert:
            resource:
              apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
              kind: Service
              metadata:
                namespace: default
                name: (join('-', ['dataplex', $projectName]))
              spec:
                projectRef:
                  name: ($projectName)
                resourceID: dataplex.googleapis.com
